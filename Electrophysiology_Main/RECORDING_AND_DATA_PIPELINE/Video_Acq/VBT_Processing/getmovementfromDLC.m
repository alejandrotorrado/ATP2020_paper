% Sam Wacks 2019
% Calculates movement from CSV files generated by Deep Lab Cut analysis
% Change fdir, prefix and suffix to match your files!
clear
%%
fdir = 'E:\JB17_18';
file_prefix = 'JB17_18_';
file_suffix = 'DeepCut_resnet50_RATATATJun6shuffle1_1030000.csv';
%%
dir_position = dir([fdir filesep file_prefix '*' file_suffix]);
num_files_position = length(dir_position(not([dir_position.isdir])));
POS = [];
TS = [];
bad_counter = 0;
bad_ID = [];
for ii = 1:num_files_position          %iterate through files
    fprintf('Processing file %u of %u.\n',ii,num_files_position);
    pos_file = [fdir filesep file_prefix int2str(ii) file_suffix];
    times_file = [fdir filesep file_prefix int2str(ii) '.csv'];
    if exist(pos_file, 'file')
        array_file = csvread(pos_file,3,1);     %read in coordinates
        if exist(times_file, 'file')
            times = csvread(times_file);        %read in frame times
            if length(times) ~= length(array_file)
                fprintf('\tTimes file %u does not match frames!\n', ii);
                bad_counter = bad_counter + 1;
                bad_ID{bad_counter} = ii;
                times = times(1:size(array_file));
            else
                body_coord = array_file(:,1:2);     %get coordinates from file
                head_coord = array_file(:,4:5);
                body_pos = sqrt(body_coord(:,1).^2 + body_coord(:,2).^2);
                head_pos = sqrt(head_coord(:,1).^2 + head_coord(:,2).^2);
                POS = cat(1, POS, body_pos);        %add data from each file to big array
                TS = cat(1, TS, times);
            end
        else
            fprintf('\tTimes not found for file %u\n', ii);
        end
    else
        fprintf('\tFile %u not found, skipping\n', ii);
    end
end
%export data as objects
MVT = abs(diff(POS));       %calculate movement by taking simple derivative
MVT_column = cat(1, NaN, MVT);      %make MVT column correct length
SMOOTH = smooth(MVT_column, 20, 'moving');      %smooth movement using package function
DATA.smooth_movement = SMOOTH';         %output object DATA for later processing
DATA.frame_times = TS;
DATA.nframes = length(POS);
RAW.raw_movement = MVT_column';     %RAW output doesn't seem to be used but was in VBT script
RAW.track = POS;
%save to output file for behavioral coding
tic;
disp('Saving data...');
save_file = [fdir filesep file_prefix 'DLCpymovement.mat'];
save(save_file,'DATA','RAW','-v7.3');
toc;